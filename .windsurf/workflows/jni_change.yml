# Windsurf JNI Change Workflow (playbook)
# Purpose: Safely modify JNI code and keep Java/C++ signatures in sync

name: jni_change

triggers:
  - jni_update
  - native_bugfix

policy:
  docs_required: true
  tests_required: true
  validate_signatures: true

prechecks:
  - ensure_paths_exist:
      - app/src/main/cpp/
      - app/src/main/java/

steps:
  - id: audit
    description: Identify Java native methods and corresponding C++ implementations
    actions:
      - cascade.search.java_native_methods:
          path: app/src/main/java/
      - cascade.search.cpp_symbols:
          path: app/src/main/cpp/
    notes:
      - Record mappings in memory and PR description

  - id: edit
    description: Apply minimal diffs to C++ headers/impl and Java declarations
    rules:
      - Keep function names and signatures aligned
      - Place imports/includes at the top of files
      - Add Javadoc/KDoc comments to Java native declarations

  - id: validate_signatures
    description: Run JNI validator and fix mismatches
    commands:
      - python jni_validator.py
    artifacts:
      - jni_validation_report.txt

  - id: build_and_test
    description: Build and run unit tests
    commands:
      - ./gradlew assembleDebug
      - ./gradlew test

  - id: document
    description: Summarize changes and decisions
    actions:
      - update_file: JNI_FIX_SUMMARY.md
      - ensure_headers_documented: app/src/main/cpp/

  - id: pr
    description: Open PR with validation report attached; ensure CI green
    checklist:
      - builds
      - tests_green
      - jni_signatures_valid
      - docs_updated
